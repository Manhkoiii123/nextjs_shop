import Head from 'next/head'
import { ReactNode } from 'react'

import LayoutNotApp from 'src/views/layout/LayoutNotApp'
import HomePage from 'src/views/pages/home'
import { TProduct } from '../../types/product'
import { getAllProductTypes } from '../../services/product-type'
import { getAllProductsPublic } from '../../services/product'

interface TOptions {
  label: string
  value: string
}

interface TProps {
  products: TProduct[]
  totalCount: number
  productTypes: TOptions[]
  params: {
    limit: number
    page: number
    order: string
    productType: string
  }
}
export default function Home(props: TProps) {
  // const { products, totalCount, params, productTypes } = props

  return (
    <>
      <Head>
        <title>Kevin Dev</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      {/* products={products} totalCount={totalCount} paramsServer={params} productTypesServer={productTypes} */}
      <HomePage />
    </>
  )
}
Home.getLayout = (page: ReactNode) => <LayoutNotApp>{page}</LayoutNotApp>
Home.guestGuard = false
Home.authGuard = false

// export async function getServerSideProps(context: any) {
//   const { page = 1, limit = 3, productType = '', order = 'createdAt desc' } = context.query
//   try {
//     const productTypes: TOptions[] = []
//     await getAllProductTypes({ params: { limit: -1, page: -1 } }).then(res => {
//       const data = res?.data.productTypes
//       if (data) {
//         data?.map((item: { name: string; _id: string }) => {
//           productTypes.push({ label: item.name, value: item._id })
//         })
//       }
//     })
//     const res = await getAllProductsPublic({
//       params: { limit: limit, page: page, productType: productType, order: order }
//     })
//     console.log('ðŸš€ ~ getServerSideProps ~ res:', res)

//     const data = res?.data

//     return {
//       props: {
//         products: data?.products,
//         totalCount: data?.totalCount,
//         productTypes: productTypes,
//         params: {
//           limit,
//           page,
//           order,
//           productType: productType
//         }
//       }
//     }
//   } catch (error) {
//     return {
//       props: {
//         products: [],
//         totalCount: 0,
//         params: {
//           limit,
//           page,
//           order
//         }
//       }
//     }
//   }
// }
